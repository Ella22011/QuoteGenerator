name: Label & comment issues

on:
  issues:
    types:
      - reopened
      - opened
      - closed
  pull_request:
    types:
      - opened

jobs:
  label_and_comment_issues:
    if: github.event_name == 'issues'
    runs-on: ubuntu-latest
    permissions:
      issues: write
    steps:
      - name: Attach label to issues
        if: github.event.action == 'opened' || github.event.action == 'reopened'
        uses: actions/github-script@v6
        with:
          script: |
            github.rest.issues.addLabels({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              labels: ["issue", "fix"]
            })

      - name: Comment on new or reopened issue
        if: github.event.action == 'opened' || github.event.action == 'reopened'
        uses: peter-evans/create-or-update-comment@v1
        with:
          issue-number: ${{ github.event.issue.number }}
          body: |
            Thanks for opening this issue! We'll take a look as soon as possible.

      - name: Comment on closed issue
        if: github.event.action == 'closed'
        uses: peter-evans/create-or-update-comment@v1
        with:
          issue-number: ${{ github.event.issue.number }}
          body: |
            âœ… The issue is now resolved. Thanks for contributing!

  comment_on_first_pr:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
    steps:
      - name: Congratulate on first pull request
        uses: actions/github-script@v7.0.1
        with:
          script: |
            const { data: pulls } = await github.rest.pulls.list({
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'all',
              per_page: 100
            });

            const user = context.payload.pull_request.user.login;
            const userPulls = pulls.filter(pr => pr.user.login === user);

            if (userPulls.length === 1) {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body: `ðŸŽ‰ Congratulations @${user} on opening your first pull request! We're excited to review it.`
              });
            }
