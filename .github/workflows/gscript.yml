name: Label & comment issues

on:
  issues:
    types:
      - opened
      - reopened
      - closed  # Trigger on issue open, reopen, or close
  pull_request:
    types:
      - opened  # Trigger when a pull request is opened

jobs:
  label_issues:
    if: github.event_name == 'issues'  # âœ… Run this job only for issue events
    runs-on: ubuntu-latest
    permissions:
      issues: write
    steps:
      - name: Attach label to issues
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.addLabels({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              labels: ["issue", "fix"]
            })

      - name: Comment on new issue opened or reopened
        if: github.event.action == 'opened' || github.event.action == 'reopened'
        uses: peter-evans/create-or-update-comment@v1
        with:
          issue-number: ${{ github.event.issue.number }}
          body: |
            Thanks for opening this issue! We'll take a look as soon as possible.

  comment_on_closed_issue:
    if: github.event_name == 'issues' && github.event.action == 'closed'  # Run this only when the issue is closed
    runs-on: ubuntu-latest
    permissions:
      issues: write
    steps:
      - name: Comment on closed issue
        uses: peter-evans/create-or-update-comment@v1
        with:
          issue-number: ${{ github.event.issue.number }}
          body: |
            The issue is now resolved.

  first_pr_greeting:
    if: github.event_name == 'pull_request' && github.event.action == 'opened'
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
    steps:
      - name: Check if it's the user's first PR
        id: check
        uses: actions/github-script@v7
        with:
          result-encoding: string
          script: |
            const { data: pulls } = await github.rest.pulls.list({
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: "all",
              per_page: 100
            });

            const userPRs = pulls.filter(pr => pr.user.login === context.payload.pull_request.user.login);
            return userPRs.length === 1;
      
      - name: Congratulate on first PR
        if: steps.check.outputs.result == 'true'
        uses: peter-evans/create-or-update-comment@v1
        with:
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            ðŸŽ‰ Congratulations on opening your first pull request! Thank you for contributing!